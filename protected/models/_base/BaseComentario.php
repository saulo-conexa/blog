<?php

/**
 * This is the model base class for the table "comentario".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Comentario".
 *
 * Columns in table "comentario" available as properties of the model,
 * followed by relations of table "comentario" available as properties of the model.
 *
 * @property integer $id
 * @property string $texto
 * @property integer $idPost
 * @property integer $qtdCurtidas
 * @property integer $idUsuario
 *
 * @property Post $idPost0
 * @property Usuario $idUsuario0
 */
abstract class BaseComentario extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'comentario';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Comentario|Comentarios', $n);
	}

	public static function representingColumn() {
		return 'texto';
	}

	public function rules() {
		return array(
			array('texto, idPost, qtdCurtidas, idUsuario', 'required'),
			array('idPost, qtdCurtidas, idUsuario', 'numerical', 'integerOnly'=>true),
			array('texto', 'length', 'max'=>255),
			array('id, texto, idPost, qtdCurtidas, idUsuario', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idPost0' => array(self::BELONGS_TO, 'Post', 'idPost'),
			'idUsuario0' => array(self::BELONGS_TO, 'Usuario', 'idUsuario'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'texto' => Yii::t('app', 'Texto'),
			'idPost' => null,
			'qtdCurtidas' => Yii::t('app', 'Qtd Curtidas'),
			'idUsuario' => null,
			'idPost0' => null,
			'idUsuario0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('texto', $this->texto, true);
		$criteria->compare('idPost', $this->idPost);
		$criteria->compare('qtdCurtidas', $this->qtdCurtidas);
		$criteria->compare('idUsuario', $this->idUsuario);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}